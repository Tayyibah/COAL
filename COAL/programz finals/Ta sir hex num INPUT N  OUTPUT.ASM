.MODEL SMALL
.STACK 100H
.DATA
    MSG1 DB 0Ah,0Dh,'ENTER HEX NO.',' $'
    MSG2 DB 0Ah,0Dh,'HEX NO IN DECIMAL IS : $'
    MSG3 DB 0AH,0DH,'ILLEGAL INPUT,TRY AGAIN: $'
.386
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX

	CALL INPUT_

ENDWHILE_:

	CALL OUTPUT_


MOV AH, 4CH
INT 21H
MAIN ENDP

INPUT_ PROC
	MOV AH,09
    	LEA DX,MSG1
   	INT 21H

	MOV CL,4
	XOR BX,BX
        ;MOV AH, 2
        ;INT 21H

        ;DEC CL     ;DON'T DEC BEFORE CHECKING
WHILE_:
	CMP CL,0
	JE ENDWHILE_
        MOV AH,1   ; WRITE INPUT SATMENT HERE YOU CODE IS TAKING INPUT AFTER VALIDATION 5 TIMES
	INT 21H
        CMP AL,0DH
        JE ENDWHILE_
	;DEC CL		;SAME MISTAKE
	CMP AL,39H
	JG LETTER
	CMP AL,30H
	JB ERROR_	
	JMP SHIFT
LETTER:
                     
	CMP AL, 'F'		;NO CMP STATEMENT WRITTEN IN LETTER
	JG ERROR_
	
	CMP AL, 'A'
	JB ERROR_
	
	SUB AL,37H   ; FIRST CMP THEN SUB

SHIFT:
	SHL BX,4
	OR BL,AL
        INT 21H;        ;INCORRECT INTRUPT
        DEC CL		; dec here
	JMP WHILE_

ERROR_:			;NO ERROR TAG DEFINE
	
	MOV AH, 9 
	LEA DX, MSG3
	INT 21H
	MOV CL, 4
	XOR BX,BX
	JMP WHILE_

ENDWHILE_:
	RET
	INPUT_ ENDP
;....................................................OUTPUT 
OUTPUT_ PROC
   	MOV AH,09
   	LEA DX,MSG2
   	INT 21H
        MOV CX,4
FOR1:
	MOV DL,BH
	SHR DL,4
	CMP DL,'9'
	JG CHAR1
	sub DL,'0'
	JMP SHIFT1

CHAR1:
	SUB DL,'A'
	ADD DL,10
SHIFT1:
	MOV AH,2
	INT 21H	
	ROL BX,4
	LOOP FOR1

	RET
	OUTPUT_ ENDP

END MAIN
